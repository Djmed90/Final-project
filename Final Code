//Bitmojis Nick
var drawFace = function(bitmojiX, bitmojiY, faceSize)
{
//Face Body
strokeWeight(1);
fill(255, 218, 150);
noStroke();
quad(bitmojiX+(faceSize/100*109), bitmojiY+(faceSize/100*98), bitmojiX+(faceSize/100*110), bitmojiY+(faceSize/100*64), bitmojiX+(faceSize/100*58), bitmojiY+(faceSize/100*65), bitmojiX+(faceSize/100*61), bitmojiY+(faceSize/100*97));
stroke(0, 0, 0);
ellipse(bitmojiX+(faceSize/100*84),bitmojiY+(faceSize/100*32),faceSize/100*75,faceSize/100*87);

//Ears
arc(bitmojiX+(faceSize/100*56),bitmojiY+(faceSize/100*39),faceSize/100*35,faceSize/100*33, 111, 244);
arc(bitmojiX+(faceSize/100*112),bitmojiY+(faceSize/100*39),faceSize/100*31,faceSize/100*33, -50, 81);

//Mouth
fill(0, 0, 0);
arc(bitmojiX+(faceSize/100*84),bitmojiY+(faceSize/100*48),faceSize/100*30,faceSize/100*32, 3, 177);
fill(255, 161, 161);
arc(bitmojiX+(faceSize/100*84),bitmojiY+(faceSize/100*59),faceSize/100*22,faceSize/100*11, -18, 201);
quad(bitmojiX+(faceSize/100*97),bitmojiY+(faceSize/100*51),bitmojiX+(faceSize/100*100),bitmojiY+(faceSize/100*48),bitmojiX+(faceSize/100*71),bitmojiY+(faceSize/100*49),bitmojiX+(faceSize/100*69),bitmojiY+(faceSize/100*52));

//Teeth
fill(255, 255, 255);
noStroke();
quad(bitmojiX+(faceSize/100*97),bitmojiY+(faceSize/100*55),bitmojiX+(faceSize/100*99),bitmojiY+(faceSize/100*50),bitmojiX+(faceSize/100*69),bitmojiY+(faceSize/100*50),bitmojiX+(faceSize/100*72),bitmojiY+(faceSize/100*55));

//Eyes
stroke(0, 0, 0);
fill(255, 255, 255);
ellipse(bitmojiX+(faceSize/100*69), bitmojiY+(faceSize/100*25), faceSize/100*15, faceSize/100*9);
ellipse(bitmojiX+(faceSize/100*97), bitmojiY+(faceSize/100*25), faceSize/100*15, faceSize/100*9);
fill(0, 162, 255);
ellipse(bitmojiX+(faceSize/100*69), bitmojiY+(faceSize/100*25), faceSize/100*6, faceSize/100*7);
ellipse(bitmojiX+(faceSize/100*97), bitmojiY+(faceSize/100*25), faceSize/100*6, faceSize/100*7);
fill(0, 0, 0);
noStroke();
ellipse(bitmojiX+(faceSize/100*69), bitmojiY+(faceSize/100*25), faceSize/100*-3, faceSize/100*2);
ellipse(bitmojiX+(faceSize/100*97), bitmojiY+(faceSize/100*25), faceSize/100*-3, faceSize/100*2);

//Nose Shaft
stroke(0, 0, 0);
line(bitmojiX+(faceSize/100*86),bitmojiY+(faceSize/100*21),bitmojiX+(faceSize/100*88),bitmojiY+(faceSize/100*36));
line(bitmojiX+(faceSize/100*78),bitmojiY+(faceSize/100*21),bitmojiX+(faceSize/100*80),bitmojiY+(faceSize/100*36));

//Nose
fill(255, 225, 143);
ellipse(bitmojiX+(faceSize/100*90),bitmojiY+(faceSize/100*38),faceSize/100*8,faceSize/100*6);
ellipse(bitmojiX+(faceSize/100*78),bitmojiY+(faceSize/100*38),faceSize/100*6,faceSize/100*7);
arc(bitmojiX+(faceSize/100*84),bitmojiY+(faceSize/100*26),faceSize/100*16,faceSize/100*33, 52, 135);

//Neck
stroke(0, 0, 0);
fill(255, 218, 150);
line(bitmojiX+(faceSize/100*110),bitmojiY+(faceSize/100*64),bitmojiX+(faceSize/100*110),bitmojiY+(faceSize/100*96));
line(bitmojiX+(faceSize/100*60),bitmojiY+(faceSize/100*65),bitmojiX+(faceSize/100*62),bitmojiY+(faceSize/100*98));
arc(bitmojiX+(faceSize/100*86),bitmojiY+(faceSize/100*77),faceSize/100*56, faceSize/100*72, 33, 146);

};

var drawHair = function(bitmojiX, bitmojiY, hairSize)
{
//Eyebrows
fill(64, 39, 22);
stroke(0, 0, 0);
quad(bitmojiX+(hairSize/100*57),bitmojiY+(hairSize/100*19),bitmojiX+(hairSize/100*74),bitmojiY+(hairSize/100*16),bitmojiX+(hairSize/100*72),bitmojiY+(hairSize/100*12),bitmojiX+(hairSize/100*55),bitmojiY+(hairSize/100*17));
quad(bitmojiX+(hairSize/100*110),bitmojiY+(hairSize/100*20),bitmojiX+(hairSize/100*109),bitmojiY+(hairSize/100*17),bitmojiX+(hairSize/100*92),bitmojiY+(hairSize/100*12),bitmojiX+(hairSize/100*93),bitmojiY+(hairSize/100*17));

//Hair
stroke(0, 0, 0);
fill(51, 34, 13);
triangle(bitmojiX+(hairSize/100*50),bitmojiY+(hairSize/100*9),bitmojiX+(hairSize/100*51),bitmojiY+(hairSize/100*43),bitmojiX+(hairSize/100*38),bitmojiY+(hairSize/100*12));
triangle(bitmojiX+(hairSize/100*127),bitmojiY+(hairSize/100*10),bitmojiX+(hairSize/100*112),bitmojiY+(hairSize/100*40),bitmojiX+(hairSize/100*114),bitmojiY+(hairSize/100*12));
fill(107, 86, 53);
noStroke();
arc(bitmojiX+(hairSize/100*85),bitmojiY+(hairSize/100*5),hairSize/100*99,hairSize/100*44, 163, 267);
arc(bitmojiX+(hairSize/100*85),bitmojiY+(hairSize/100*5),hairSize/100*88,hairSize/100*44, 265, 378);
quad(bitmojiX+(hairSize/100*35),bitmojiY+(hairSize/100*12),bitmojiX+(hairSize/100*82),bitmojiY-(hairSize/100*2),bitmojiX+(hairSize/100*82),bitmojiY-(hairSize/100*17),bitmojiX+(hairSize/100*52),bitmojiY-(hairSize/100*4));
quad(bitmojiX+(hairSize/100*129),bitmojiY+(hairSize/100*13),bitmojiX+(hairSize/100*115),bitmojiY-(hairSize/100*2),bitmojiX+(hairSize/100*80),bitmojiY-(hairSize/100*13),bitmojiX+(hairSize/100*84),bitmojiY+(hairSize/100*5));

};

var drawShirt = function(bitmojiX, bitmojiY, shirtSize)
{
//Shirt
stroke(0, 0, 0);
fill(255, 255, 255);
triangle(bitmojiX+(shirtSize/100*145),bitmojiY+(shirtSize/100*125),bitmojiX+(shirtSize/100*27),bitmojiY+(shirtSize/100*124),bitmojiX+(shirtSize/100*82),bitmojiY+(shirtSize/100*191));
quad(bitmojiX+(shirtSize/100*146),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*111),bitmojiY+(shirtSize/100*97),bitmojiX+(shirtSize/100*90),bitmojiY+(shirtSize/100*125),bitmojiX+(shirtSize/100*110),bitmojiY+(shirtSize/100*129));
quad(bitmojiX+(shirtSize/100*27),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*62),bitmojiY+(shirtSize/100*97),bitmojiX+(shirtSize/100*84),bitmojiY+(shirtSize/100*123),bitmojiX+(shirtSize/100*67),bitmojiY+(shirtSize/100*129));
fill(0, 0, 0);
line(bitmojiX+(shirtSize/100*93),bitmojiY+(shirtSize/100*127),bitmojiX+(shirtSize/100*95),bitmojiY+(shirtSize/100*182));
line(bitmojiX+(shirtSize/100*77),bitmojiY+(shirtSize/100*118),bitmojiX+(shirtSize/100*80),bitmojiY+(shirtSize/100*187));
//OuterShirt
fill(0, 0, 0);
quad(bitmojiX-(shirtSize/100*5),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*64),bitmojiY+(shirtSize/100*97),bitmojiX+(shirtSize/100*33),bitmojiY+(shirtSize/100*123),bitmojiX+(shirtSize/100*24),bitmojiY+(shirtSize/100*129));
quad(bitmojiX-(shirtSize/100*4),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*81),bitmojiY+(shirtSize/100*191),bitmojiX+(shirtSize/100*33),bitmojiY+(shirtSize/100*123),bitmojiX+(shirtSize/100*24),bitmojiY+(shirtSize/100*129));
quad(bitmojiX+(shirtSize/100*174),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*110),bitmojiY+(shirtSize/100*96),bitmojiX+(shirtSize/100*141),bitmojiY+(shirtSize/100*123),bitmojiX+(shirtSize/100*145),bitmojiY+(shirtSize/100*129));
quad(bitmojiX+(shirtSize/100*174),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*83),bitmojiY+(shirtSize/100*191),bitmojiX+(shirtSize/100*142),bitmojiY+(shirtSize/100*127),bitmojiX+(shirtSize/100*152),bitmojiY+(shirtSize/100*129));
quad(bitmojiX+(shirtSize/100*174),bitmojiY+(shirtSize/100*205),bitmojiX+(shirtSize/100*67),bitmojiY+(shirtSize/100*204),bitmojiX+(shirtSize/100*159),bitmojiY+(shirtSize/100*127),bitmojiX+(shirtSize/100*174),bitmojiY+(shirtSize/100*125));
quad(bitmojiX-(shirtSize/100*4),bitmojiY+(shirtSize/100*125),bitmojiX+(shirtSize/100*1),bitmojiY+(shirtSize/100*204),bitmojiX+(shirtSize/100*95),bitmojiY+(shirtSize/100*204),bitmojiX+(shirtSize/100*27),bitmojiY+(shirtSize/100*143));
//Bowtie
fill(115, 115, 115);
triangle(bitmojiX+(shirtSize/100*87),bitmojiY+(shirtSize/100*122),bitmojiX+(shirtSize/100*61),bitmojiY+(shirtSize/100*133),bitmojiX+(shirtSize/100*62),bitmojiY+(shirtSize/100*108));
triangle(bitmojiX+(shirtSize/100*84),bitmojiY+(shirtSize/100*122),bitmojiX+(shirtSize/100*109),bitmojiY+(shirtSize/100*133),bitmojiX+(shirtSize/100*107),bitmojiY+(shirtSize/100*108));

//Button
ellipse(bitmojiX+(shirtSize/100*86), bitmojiY+(shirtSize/100*197), shirtSize/100*6, shirtSize/100*7);

//Flower
quad(bitmojiX+(shirtSize/100*135),bitmojiY+(shirtSize/100*161),bitmojiX+(shirtSize/100*122),bitmojiY+(shirtSize/100*163),bitmojiX+(shirtSize/100*148),bitmojiY+(shirtSize/100*140),bitmojiX+(shirtSize/100*154),bitmojiY+(shirtSize/100*141));
fill(255, 255, 255);
triangle(bitmojiX+(shirtSize/100*154),bitmojiY+(shirtSize/100*127),bitmojiX+(shirtSize/100*145),bitmojiY+(shirtSize/100*133),bitmojiX+(shirtSize/100*152),bitmojiY+(shirtSize/100*154));
triangle(bitmojiX+(shirtSize/100*167),bitmojiY+(shirtSize/100*134),bitmojiX+(shirtSize/100*153),bitmojiY+(shirtSize/100*133),bitmojiX+(shirtSize/100*152),bitmojiY+(shirtSize/100*147));
fill(0, 130, 33);
triangle(bitmojiX+(shirtSize/100*158),bitmojiY+(shirtSize/100*148),bitmojiX+(shirtSize/100*145),bitmojiY+(shirtSize/100*140),bitmojiX+(shirtSize/100*169),bitmojiY+(shirtSize/100*140));
triangle(bitmojiX+(shirtSize/100*145),bitmojiY+(shirtSize/100*126),bitmojiX+(shirtSize/100*142),bitmojiY+(shirtSize/100*136),bitmojiX+(shirtSize/100*152),bitmojiY+(shirtSize/100*149));

//Text Name
fill(0, 221, 255);
textSize(shirtSize/100*21);
text("NR", bitmojiX+(shirtSize/100*17), bitmojiY+(shirtSize/100*179), shirtSize/100*53, shirtSize/100*119);
};

var drawBitmoji = function(bitmojiX, bitmojiY, bitmojiSize)
{

drawFace(bitmojiX+100,bitmojiY+100,bitmojiSize/100*100);
drawHair(bitmojiX+100,bitmojiY+100,bitmojiSize/100*100);
drawShirt(bitmojiX+100,bitmojiY+100,bitmojiSize/100*100);

};

//Bitmoji Darren
var drawHeadD = function (x,y,h)
    {
        strokeWeight(1);
        var p = h/100;
        noStroke();
        fill(255, 224, 189); //skin
        ellipse(x+0*p,y+0*p,83*p,100*p); //head
        fill(0, 204, 255); //Make sure you change this color to match background !!!-------------------------------------------------------------------
        stroke(0, 0, 0);
         fill(255, 224, 189);//skin
        bezier(x+4*p,y+4*p,x+29*p,y+24*p,x-8*p,y+16*p,x+1*p,y+15*p);//nose
    
    };

var drawFaceD = function(x,y,h)
    {
        var p = h/100;
        fill(255, 224, 189);//skin
        stroke(0, 0, 0); //for glasses
        rect(x+9*p,y-8*p,26*p,11*p); //glasses right
        rect(x-27*p,y-8*p,26*p,11*p); //glasses left
        line(x+8*p,y-3*p,x-1*p,y-3*p); //glasses middle
        line(x-43*p,y-7*p,x-28*p,y-2*p); //glasses right
        line(x+40*p,y-7*p,x+35*p,y-2*p); //glasses left
        noStroke();
        fill(66, 38, 38); //color for eye and hair
        ellipse(x-10*p,y-1*p,6*p,4*p);//eye right
        ellipse(x+17*p,y-1*p,6*p,4*p);//eye left
        ellipse(x+9*p,y-34*p,66*p,33*p);//hair top
        quad(x-44*p,y-7*p,x-33*p,y-34*p,x-12*p,y-48*p,x-32*p,y-3*p); //hair left
        quad(x+45*p,y+3*p,x+37*p,y-38*p,x+26*p,y-21*p,x+36*p,y-5*p); //hair right
        stroke(0, 0, 0);
        fill(255, 255, 255); //big smile
        arc(x+3*p,y+25*p,30*p,13*p,1,180); //mouth
        line(x-14*p,y+24*p,x+19*p,y+24*p);// top lip
    };

var drawShirtD = function(x,y,h)
    {
        var p = h/100;
        fill(0, 0, 0);//red color shirt
        quad(x-24*p,y+55*p,x-56*p,y+115*p,x+83*p,y+122*p,x+31*p,y+58*p);//shirt   
        stroke(204, 51, 97);
        strokeWeight(3);//line thickness
        line(x-21*p,y+103*p,x-19*p,y+73*p);//D
        line(x-3*p,y+88*p,x-18*p,y+72*p);//D
        line(x-3*p,y+88*p,x-19*p,y+101*p);//D
        line(x+27*p,y+76*p,x+17*p,y+87*p);//m
        line(x+8*p,y+76*p,x+17*p,y+87*p);//m
        line(x+27*p,y+76*p,x+28*p,y+101*p);//m
        line(x+8*p,y+76*p,x+7*p,y+100*p);//m
        
    };
    
    var drawMe = function(x,y,h) 
    {
     
        drawHeadD (x,y,h);
        drawFaceD (x,y,h);
        drawShirtD (x,y,h);
    };
//Bitmoji Drawing ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//------------------------------------------------------------------------------------------
var powerX = 0;
var powerY = 0;
var dotx = 0;
var doty = 0;
var gameStarted = false;
var Ball_Speed = 30;
var BALL_SPEED = powerX;
var x1;
var y1;
var x2;
var y2;
var differenceX;
var differenceY;
//----------
var BallX = 200;
var BallY = 200;
var Level = true;
var trys = 0;
var gameover = false;
var currentScene = 0;
var doorShape = true;
//Constants
var colorCounter = 0; //Used for "Rainbow" coloring as timer
var rainbowline = true;
var xPositions = [random(400)];
var yPositions = [0];
var starColors=[];
var starSpeeds=[];
var numDrops = 30;
var win = false;
var shot = false;
var letgo = true;
var pressed = true;
var shotRIGHT = false;
var shotLEFT = false;
var shotUP = false;
var shotDOWN = false;
var doorOpen = false;
var trys1 = false;
var Walls = function(x,y,x2,y2) //our walls 
    {
        strokeWeight(15);
        stroke(255, 255, 255);
        line(x,y,x2,y2);
    };
      var Door = function(x,y,x2,y2,ColorGlow,Y) //glowing door
    {
    var StrokeWeight=12;
    if(rainbowline){
        colorMode(HSB);
        stroke(255, 255, 255,20);
        colorMode(RGB);
    }else{
        stroke(ColorGlow);
    }
    if(doorShape !== false){
    for(var i=0;i<20;i++){
        strokeWeight(StrokeWeight+(i*0.6));
        if(Y){
            line(x,y+(StrokeWeight/2.14),x2,y2-(StrokeWeight/1.14));
        } else {
            line(x+(StrokeWeight/100),y,x2-(StrokeWeight/100),y2);
        }
    
    }
    stroke(255, 255, 255,230);
    strokeWeight(StrokeWeight);
    line(x,y,x2,y2);
}
    };


// BUTTONS HERE-----------------------------------------------------------------------------
var Button = function(config) {
    this.x = config.x || -1;
    this.y = config.y || 0;
    this.width = config.width || 66;
    this.height = config.height || 51;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() {
    fill(0, 234, 255);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+3, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

var startButton = new Button({
    x: 167,
    y: 232,
    label: "Start",
    onClick: function() {
        currentScene = 1;
    }
});

var restartButton = new Button({
    x: 175,
    y: 190,
    label: "Restart",
    onClick: function() {
        gameover = true;
    Level = true;
    shot = false;
     letgo = true;
     trys1 = false;
         pressed = true;
         shotRIGHT = false;
         shotLEFT = false;
         shotUP = false;
         shotDOWN = false;
     doorOpen = false;
    }
});

var winButton = new Button({
    x: 175,
    y: 190,
    label: "Next",
    onClick: function() {
           win = false;
           currentScene = currentScene +1;
           Level = true;
    shot = false;
     letgo = true;
     trys1 = false;
         pressed = true;
         shotRIGHT = false;
         shotLEFT = false;
         shotUP = false;
         shotDOWN = false;
     doorOpen = false;
    }
});
//------------------------------------------------------------------------------------------
 for (var i = 0; i < numDrops; i++) //What creates the Stars
{
    xPositions.push(random(0,400));
    yPositions.push(random(0,400));
    starColors.push(color(255, 246, 117));
    starSpeeds.push(round(random(1,2)));
}
 
 var space = function() //Space Background
 {
    background(0, 0, 0);
    noStroke();
    
    for (var i = 0; i < xPositions.length; i++) {
        fill(starColors[i]);
        ellipse(xPositions[i], yPositions[i], 2, 2);
        yPositions[i] += starSpeeds[i];
        if(yPositions[i]>400)
            {
               yPositions[i]=0;     
            }
    }
    fill(0, 0, 0);
    ellipse(381,0,17,45);
};

 var Ball = function() { // Our function for the ball
     
    var BallMoveX = differenceX/Ball_Speed;
    var BallMoveY = differenceY/Ball_Speed;
if (pressed === true) {
    mousePressed = function() {
// when mouse is pressed, save the current position
x1 = mouseX;
y1 = mouseY;
letgo = false;
pressed = false;
};
}
if (letgo === false) {
mouseReleased = function() {
// when mouse is released, calculate the opposite direction
    x2 = mouseX;
    y2 = mouseY;
    differenceX = x1 - x2;
    differenceY = y1 - y2;
    
    shot = true;
    letgo = true;
    
};
}
    

    //Ball Draw
    ellipse(BallX,BallY,10,10);
    //Slingshot
    powerX = dist(mouseX, 0, BallX, 0);
    powerY = dist(0, mouseY, 0, BallY);
    if (mouseIsPressed ) {
        if (mouseX > BallX) {
                dotx = -powerX;
            } else {
                dotx = powerX;
            }
            if (mouseY > BallY) {
                doty = -powerY;
            } else {
                doty = powerY;
            }

        strokeWeight(5);
            for (var dotRep = 1; dotRep < 5; dotRep += 1) {
                fill(255, 255, 255);
                point(mouseX + dotRep * dotx/4, mouseY + dotRep * doty/4);
            }
    }
   
        
    //If Mouse Is Released - Then Shot True
    if(shot === true) {
        BallX += BallMoveX;
        BallY += BallMoveY;
    }
    
        if(doorOpen === false) { 
            //Shot DOWN RIGHT
           if(BallMoveY >= 0 && BallMoveX >= 0) { 
            if(BallY >= 330 && shotDOWN === false)
            {
                shot = false;
                shotDOWN = true;
                shotUP = false;
                trys--;
            }
                if (shotDOWN === true) {
                letgo = true;
                BallY += -1*BallMoveY;
                
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                
                
            }
            if(BallY <= 63 && shotUP === false) {
                shot = false;
                shotDOWN = false;
                shotUP = true;
                trys--;
                
            }
            if(shotUP === true) {
               letgo = true;
               shotDOWN = false;
                BallY += BallMoveY;
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                 
            }
            if(BallX >= 330 && shotRIGHT === false)
            {
                shot = false;
                shotRIGHT = true;
                shotLEFT = false;
                trys--;

            }
            
            if (shotRIGHT === true) {
                letgo = true;
                BallX += -1*BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
            
            if(BallX <= 63 && shotLEFT === false) {
                shot = false;
                shotRIGHT = false;
                shotLEFT = true;
                trys--;
                
            }
            
            if(shotLEFT === true) {
               letgo = true;
                shotRIGHT = false;
                BallX += BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
               
           }
           
           //Shot DOWN LEFT
           
           if(BallMoveY >= 0 && BallMoveX <= 0) { 
            if(BallY >= 330 && shotDOWN === false)
            {
                shot = false;
                shotDOWN = true;
                shotUP = false;
                trys--;
            }
                if (shotDOWN === true) {
                letgo = true;
                BallY += -1*BallMoveY;
                
                if(shotLEFT === false && shotRIGHT === false) {
                    BallX += BallMoveX;
                }
                
                
            }
            if(BallY <= 63 && shotUP === false) {
                shot = false;
                shotDOWN = false;
                shotUP = true;
                trys--;
                
            }
            if(shotUP === true) {
               letgo = true;
               shotDOWN = false;
                BallY += BallMoveY;
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                 
            }
            if(BallX >= 330 && shotRIGHT === false)
            {
                shot = false;
                shotRIGHT = true;
                shotLEFT = false;
                trys--;

            }
            
            if (shotRIGHT === true) {
                letgo = true;
                BallX += BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
            
            if(BallX <= 63 && shotLEFT === false) {
                shot = false;
                shotRIGHT = false;
                shotLEFT = true;
                trys--;
                
            }
            
            if(shotLEFT === true) {
               letgo = true;
                shotRIGHT = false;
                BallX += -1*BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
            
           }
           
           //Shot UP RIGHT
           
           if(BallMoveY <= 0 && BallMoveX >= 0) {
            if(BallY >= 330 && shotDOWN === false)
            {
                shot = false;
                shotDOWN = true;
                shotUP = false;
                trys--;
            }
                if (shotDOWN === true) {
                letgo = true;
                BallY += BallMoveY;
                
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                
                
            }
            if(BallY <= 63 && shotUP === false) {
                shot = false;
                shotDOWN = false;
                shotUP = true;
                trys--;
                
            }
            if(shotUP === true) {
               letgo = true;
               shotDOWN = false;
                BallY -= BallMoveY;
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                 
            }
            if(BallX >= 330 && shotRIGHT === false)
            {
                shot = false;
                shotRIGHT = true;
                shotLEFT = false;
                trys--;

            }
            
            if (shotRIGHT === true) {
                letgo = true;
                BallX += -1*BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
            
            if(BallX <= 63 && shotLEFT === false) {
                shot = false;
                shotRIGHT = false;
                shotLEFT = true;
                trys--;
                
            }
            
            if(shotLEFT === true) {
               letgo = true;
                shotRIGHT = false;
                BallX += BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
           }
           
           //Shot UP LEFT
           if(BallMoveY <= 0 && BallMoveX <= 0) { 
            if(BallY >= 330 && shotDOWN === false)
            {
                shot = false;
                shotDOWN = true;
                shotUP = false;
                trys--;
            }
                if (shotDOWN === true) {
                letgo = true;
                BallY += BallMoveY;
                
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                
                
            }
            if(BallY <= 63 && shotUP === false) {
                shot = false;
                shotDOWN = false;
                shotUP = true;
                trys--;
                
            }
            if(shotUP === true) {
               letgo = true;
               shotDOWN = false;
                BallY -= BallMoveY;
                if(shotRIGHT === false && shotLEFT === false) {
                    BallX += BallMoveX;
                }
                 
            }
            if(BallX >= 330 && shotRIGHT === false)
            {
                shot = false;
                shotRIGHT = true;
                shotLEFT = false;
                trys--;

            }
            
            if (shotRIGHT === true) {
                letgo = true;
                BallX += BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
            
            if(BallX <= 63 && shotLEFT === false) {
                shot = false;
                shotRIGHT = false;
                shotLEFT = true;
                trys--;
                
            }
            
            if(shotLEFT === true) {
               letgo = true;
                shotRIGHT = false;
                BallX += -1*BallMoveX;
                if(shotDOWN === false && shotUP === false) {
                        BallY += BallMoveY;
                    }
            }
           }
           
           
        }
        
        //TRYS 1 DEBUG
        if (trys === 1 && BallX <= 70 && BallY >= 65 && BallY <= 185) {
            trys1 = true;
        }
        if (BallX > 200) {
                trys1 = false;
            }

            
        if(trys === 0 && trys1 === false) {
              if (BallX <= 70 && BallY >= -10 && BallY <= 185|| BallX <= 60 && BallY >= 170) {
              doorOpen = true;
              if (BallX <= -10 || BallY <= 0) {
                  win = true;
              }
              if (shotRIGHT === true && BallMoveX <= 0 && BallMoveY <= 0) {
              BallX += BallMoveX;
              }
              
              
              if (shotRIGHT === true && BallMoveX >= 0 && BallMoveY >= 0) {
                  BallX -= BallMoveX;
              }
              
              
              if (shotRIGHT === true && BallMoveX >= 0 && BallMoveY <= 0) {
                  BallX -= BallMoveX;
              
              }
              
              
              if (shotRIGHT === true && BallMoveX <= 0 && BallMoveY >= 0) {
                  BallX += BallMoveX;
              }
              if (shotUP === true && BallMoveY <= 0) {
              BallY -= BallMoveY;
              }
              
              if (shotUP === true && BallMoveY >= 0) {
              BallY += BallMoveY;
              }
              
              if (shotDOWN === true && BallMoveY <= 0) {
              BallY += BallMoveY;
              }
              
              if (shotDOWN === true && BallMoveY >= 0) {
              BallY -= BallMoveY;
              }
             
              if (shotDOWN === true && BallMoveY <= 0 && BallMoveX <= 0 && shotRIGHT === false) {
              BallX += BallMoveX;
              }
              if (shotDOWN === true && BallMoveY >= 0 && BallMoveX <= 0 && shotRIGHT === false) {
              BallX += BallMoveX;
              }
              if (shotUP === true && BallMoveY >= 0 && BallMoveX <= 0 && shotRIGHT === false) {
              
              BallX += BallMoveX;
              }
              if (shotUP === true && BallMoveY <= 0 && BallMoveX <= 0 && shotRIGHT === false) {
              
              BallX += BallMoveX;
              }
              }
        }
        if(doorOpen === true && BallX >= 38 && BallX <= 64 && BallY < 189 && BallY > 170) {
            trys = -1;
        }
        
}; 
                

var splashXText = 0;
var splashYText = 0;
   
var splash = function () //SPLASH SCREEN
    {
        
        background(60, 212, 250);
        fill(0, 0, 0);
        
        if (splashYText < 96) {
        textSize(55);
        text("Space Walls", 49, -192 + splashYText*3);
        splashYText++;
        }
        if (splashYText === 96) {
        textSize(55);
        text("Space Walls", 49, 95);
        }
        if (splashXText < 76) {
        textSize(15);
        text("By: Nick Rapoza and Darren Medeiros", -304 + splashXText*5, 180);
        splashXText++;
        }
        if (splashXText === 76) {
        textSize(15);
        text("By: Nick Rapoza and Darren Medeiros", 76, 180);
        }
        fill(0, 0, 0);
        
        startButton.draw();
        drawMe(327,291,100,100);
        drawBitmoji(-103,120,109,101);
    
    };


    
var setup = function () //SETUP FUNCTION WHEN YOU LOSE
    {
        currentScene = currentScene;
        //Constants
        BallX = 200;
        BallY = 200;
        Level = true;
        trys = -1;
        gameover = false;
    };
    
    var walls1 = function() //FIRST LEVEL
    {
           if (currentScene === 1 && Level === true)
        {
          trys = 1;
         Level = false;
        }
    space();
    fill(140, 132, 132);
    textSize(300);
    text(trys,120,20,400,400);
    Walls(50,350,50,189);
    Ball();
    if( trys !== 0)
        {
         Door(50,179,50,50);
        }
    Walls(350,50,350,350);
    Walls(350,50,50,50);
    Walls(350,350,50,350);
    strokeWeight(1);
   if(trys === -1) //WHAT IT SAYS WHEN YOU LOSE
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Game Over!",126,135,203,100);
            drawMe(345,158,63,100);
            drawBitmoji(-82,39,50,70);
            restartButton.draw();
        }
        if(win === true) // WHAT IT SAYS WHEN YOU WIN
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Level Complete",103,129,242,100);
            winButton.draw();
        }
        fill(255, 255, 255);
        textSize(26);
        text("Level " + currentScene + "!",160,8,100,100);
    };
       var walls2 = function() // SECONDS LEVEL
    {
           if (currentScene === 2 && Level === true)
        {
          trys = 2;
         Level = false;
        }
    space();
    fill(140, 132, 132);
    textSize(300);
    text(trys,120,20,400,400);
    Walls(50,350,50,189);
    Ball();
    if( trys !== 0)
        {
         Door(50,179,50,50);
        }
    Walls(350,50,350,350);
    Walls(350,50,50,50);
    Walls(350,350,50,350);
    strokeWeight(1);
     if(trys === -1) //WHAT IT SAYS WHEN YOU LOSE
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Game Over!",126,135,203,100);
            drawMe(345,158,63,100);
            drawBitmoji(-82,39,50,70);
            restartButton.draw();
        }
        if(win === true)
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Level Complete",103,129,242,100);
            winButton.draw();
        }
        fill(255, 255, 255);
        textSize(26);
        text("Level " + currentScene + "!",160,8,100,100);
    };
    
var walls3 = function () //THIRD LEVEL
{
    if (currentScene === 3 && Level === true)
        {
         trys = 3;
         Level = false;
         BallX = 200;
         BallY = 300;
        }
    space();
    fill(140, 132, 132);
    textSize(300);
    text(trys,120,20,400,400);
    Walls(50,350,50,189);
    Ball();
    if( trys !== 0)
        {
         Door(50,179,50,50);
        }
    Walls(350,50,350,350);
    Walls(350,50,50,50);
    Walls(350,350,50,350);
    strokeWeight(1);
     if(trys === -1) //WHAT IT SAYS WHEN YOU LOSE
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Game Over!",126,135,203,100);
            drawMe(345,158,63,100);
            drawBitmoji(-82,39,50,70);
            restartButton.draw();
        }
        if(win === true)
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Level Complete",103,129,242,100);
            winButton.draw();
        }
      fill(255, 255, 255);
        textSize(26);
        text("Level " + currentScene + "!",160,8,100,100);
};
var walls4 = function () //FOURTH LEVEL
{
    if (currentScene === 4 && Level === true)
        {
         trys = 4;
         Level = false;
         BallX = 300;
         BallY = 300;
        }
    space();
    fill(140, 132, 132);
    textSize(300);
    text(trys,120,20,400,400);
    Walls(50,350,50,189);
    Ball();
    if( trys !== 0)
        {
         Door(50,179,50,50);
        }
    Walls(350,50,350,350);
    Walls(350,50,50,50);
    Walls(350,350,50,350);
    strokeWeight(1);
    if(trys === -1) //WHAT IT SAYS WHEN YOU LOSE
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Game Over!",126,135,203,100);
            drawMe(345,158,63,100);
            drawBitmoji(-82,39,50,70);
            restartButton.draw();
        }
        if(win === true)
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Level Complete",103,129,242,100);
            winButton.draw();
        }
        text("Level " + currentScene + "!",160,8,100,100);
      
};
var walls5 = function () //FIFTH LEVEL
{
    if (currentScene === 5 && Level === true)
        {
         trys = 10;
         Level = false;
         BallX = 130;
         BallY = 300;
        }
    space();
    fill(140, 132, 132);
    if (trys === 10) {
    textSize(290);
    text(trys,28,30,380,400);
    }
    if (trys < 10) {
    textSize(300);
    text(trys,120,20,390,400);
    }
    Walls(50,350,50,189);
    Ball();
    if( trys !== 0)
        {
         Door(50,179,50,50);
        }
    Walls(350,50,350,350);
    Walls(350,50,50,50);
    Walls(350,350,50,350);
    strokeWeight(1);
   if(trys === -1) //WHAT IT SAYS WHEN YOU LOSE
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Game Over!",126,135,203,100);
            drawMe(345,158,63,100);
            drawBitmoji(-82,39,50,70);
            restartButton.draw();
        }
        if(win === true)
        {
            BallX = 200;
            BallY = 200;
            fill(0, 0, 0);
            rect(0,100,400,150);
            fill(255, 255, 255);
            textSize(30);
            text("Level Complete",103,129,242,100);
            winButton.draw();
        }
        text("Level " + currentScene + "!",160,8,100,100);
};

var walls6 = function () //CONGRATS YOU WON LEVEL
{
    space();
    fill(140, 132, 132);
            fill(0, 0, 0);
            stroke(255, 255, 255);
            strokeWeight(10);
            rect(5,100,390,150);
            fill(255, 255, 255);
            noStroke();
            textSize(30);
            text("Congrats on beating the game!",30,129,400,100);
};
    //DEALS WITH MOUSE CLICKS
mouseClicked = function() {
    if (currentScene === 0)
    {
        startButton.handleMouseClick();
    }
     if (trys === -1)
    {
        restartButton.handleMouseClick();
    }
        if (win === true)
    {
        winButton.handleMouseClick();
    }
};

draw = function() { // OUR AMAZING DRAW FUNCTION
    if (currentScene === 0) 
        { 
            splash();
        }
    if (currentScene === 1)
    { 
        walls1();
    }
    else if (currentScene === 2)
    {
        walls2();
    }
    else if (currentScene === 3)
    {
        walls3();
    }
     else if (currentScene === 4)
    {
        walls4();
    }
     else if (currentScene === 5)
    {
        walls5();
    }
    else if (currentScene === 6)
    {
        walls6();
    }
    if (gameover === true)
    {
       setup();
    }
    
};
